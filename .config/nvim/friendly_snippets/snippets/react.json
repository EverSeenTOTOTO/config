{
  "reactFunctionComponent": {
    "prefix": "rfc",
    "body": "\nconst ${TM_FILENAME_BASE} = () => {\n\treturn (\n\t\t<div>\n\t\t\t$0\n\t\t</div>\n\t)\n}\n\nexport default ${TM_FILENAME_BASE}",
    "description": "Creates a React function component without PropTypes"
  },
  "useState": {
    "prefix": "useState",
    "body": "const [${1:setterName}, set${1:setterName}] = useState(${2:defVal})$0",
    "description": "use state hook"
  },
  "useEffect": {
    "prefix": "useEffect",
    "body": [
      "useEffect(() => {",
      "\t$1",
      "}, [${3:dependencies}])$0"
    ],
    "description": "React useEffect() hook"
  },
  "useContext": {
    "prefix": "useContext",
    "body": ["const $1 = useContext($2)$0"],
    "description": "React useContext() hook"
  },
  "useRef": {
    "prefix": "useRef",
    "body": ["const ${1:elName}El = useRef(null)$0"],
    "description": "React useContext() hook"
  },
  "useStore": {
    "prefix": "useStore",
    "body": ["const ${1:elName}El = useStore(null)$0"],
    "description": "Custom useStore hook"
  },
  "useCallback": {
    "prefix": "useCallback",
    "body": [
      "const ${1:memoizedCallback} = useCallback(",
      "\t() => {",
      "\t\t${2:doSomething}(${3:a}, ${4:b})",
      "\t},",
      "\t[${5:a}, ${6:b}],",
      ")$0"
    ],
    "description": "React useCallback() hook"
  },
  "useMemo": {
    "prefix": "useMemo",
    "body": [
      "const ${1:memoizedValue} = useMemo(() => ${2:computeExpensiveValue}(${3:a}, ${4:b}), [${5:a}, ${6:b}])$0"
    ],
    "description": "React useMemo() hook"
  }
}
